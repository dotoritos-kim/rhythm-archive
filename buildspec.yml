version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo "Installing dependencies..."
      - npm ci
      - npm install -g @nestjs/cli
      - npm install -g nestia
      - echo "Installing OCI CLI..."
      - bash -c "$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)" -- --accept-all-defaults
      - echo "OCI CLI installed successfully"

  pre_build:
    commands:
      - echo "Pre-build phase started on `date`"
      - echo "Setting up OCI environment variables..."
      - export IMAGE_TAG=$OCI_BUILD_RUN_ID
      - export IMAGE_REPO_NAME=rhythm-archive
      - export OCI_REGION=$OCI_REGION
      - export OCI_TENANCY_OCID=$OCI_TENANCY_OCID
      - export OCI_USER_OCID=$OCI_USER_OCID
      - export OCI_FINGERPRINT=$OCI_FINGERPRINT
      - export OCI_PRIVATE_KEY_PATH=$OCI_PRIVATE_KEY_PATH
      - echo "Configuring OCI CLI..."
      - oci setup config --token-auth --file ~/.oci/config
      - echo "Logging in to OCI Container Registry..."
      - oci artifacts container repository list --compartment-id $OCI_COMPARTMENT_ID
      - REPOSITORY_URI=$OCI_REGION.ocir.io/$OCI_TENANCY_NAMESPACE/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $OCI_BUILD_RUN_ID | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}

  build:
    commands:
      - echo "Build phase started on `date`"
      - echo "Running tests..."
      - npm run test
      - echo "Building application..."
      - npm run build
      - echo "Generating Swagger documentation..."
      - npm run swagger:generate
      - echo "Building Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo "Build completed on `date`"

  post_build:
    commands:
      - echo "Post-build phase started on `date`"
      - echo "Pushing Docker image to OCI Container Registry..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Writing image definitions file..."
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDefinitions.json
      - echo "Post-build phase completed on `date`"

artifacts:
  files:
    - imageDefinitions.json
    - appspec.yml
    - taskdef.json
  discard-paths: no

cache:
  paths:
    - 'node_modules/**/*'
    - '.npm/**/*'
